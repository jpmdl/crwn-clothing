{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\"; // import thunk from \"redux-thunk\"; // library that lets reduz call functions\n\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\"; // const middlewares = [thunk];\n\nconst sagaMiddlewre = createSagaMiddleware();\nconst middlewares = [sagaMiddlewre];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // after store is created with saga middleware,\n// we are going to run each saga we want to apply\n\nsagaMiddlewre.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistStore\n};","map":{"version":3,"sources":["/Users/jploureiro/Documents/local/udemy/reactjs-and-redux/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","rootSaga","sagaMiddlewre","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAEA;;AACA,MAAMC,aAAa,GAAGH,oBAAoB,EAA1C;AACA,MAAMI,WAAW,GAAG,CAACD,aAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CAEP;AACA;;AACAD,aAAa,CAACO,GAAd,CAAkBR,QAAlB;AAEA,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASX,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\n// import thunk from \"redux-thunk\"; // library that lets reduz call functions\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\n\n// const middlewares = [thunk];\nconst sagaMiddlewre = createSagaMiddleware();\nconst middlewares = [sagaMiddlewre];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// after store is created with saga middleware,\n// we are going to run each saga we want to apply\nsagaMiddlewre.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistStore };\n"]},"metadata":{},"sourceType":"module"}